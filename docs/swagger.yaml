basePath: /api/v1
definitions:
  models.CreateMessageRequest:
    properties:
      payload:
        type: object
    required:
    - payload
    type: object
  models.CreateTenantRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  models.Message:
    properties:
      created_at:
        type: string
      id:
        type: string
      payload:
        type: object
      tenant_id:
        type: string
    type: object
  models.MessageStats:
    properties:
      messages_1h:
        type: integer
      messages_24h:
        type: integer
      total_messages:
        type: integer
    type: object
  models.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.Tenant:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateConcurrencyRequest:
    properties:
      workers:
        maximum: 100
        minimum: 1
        type: integer
    required:
    - workers
    type: object
  services.PaginatedMessages:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Message'
        type: array
      next_cursor:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A multi-tenant messaging system with RabbitMQ and PostgreSQL
  title: Multi-Tenant Messaging System API
  version: "1.0"
paths:
  /messages:
    get:
      description: Get messages with cursor-based pagination
      parameters:
      - description: Tenant ID
        in: query
        name: tenant_id
        required: true
        type: string
      - description: Cursor for pagination
        in: query
        name: cursor
        type: string
      - description: Limit (default 20, max 100)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.PaginatedMessages'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get messages with pagination
      tags:
      - messages
  /messages/{id}:
    delete:
      description: Delete a message by its ID
      parameters:
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a message
      tags:
      - messages
    get:
      description: Get a specific message by its ID
      parameters:
      - description: Message ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a message by ID
      tags:
      - messages
  /messages/{tenant_id}:
    post:
      consumes:
      - application/json
      description: Create a new message for a tenant
      parameters:
      - description: Tenant ID
        in: path
        name: tenant_id
        required: true
        type: string
      - description: Message data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a message
      tags:
      - messages
  /stats/tenants/{id}/messages:
    get:
      description: Get message statistics for a tenant
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MessageStats'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get message statistics
      tags:
      - stats
  /tenants:
    get:
      description: Get a list of all tenants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tenant'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List all tenants
      tags:
      - tenants
    post:
      consumes:
      - application/json
      description: Create a new tenant with automatic consumer setup
      parameters:
      - description: Tenant data
        in: body
        name: tenant
        required: true
        schema:
          $ref: '#/definitions/models.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new tenant
      tags:
      - tenants
  /tenants/{id}:
    delete:
      description: Delete a tenant and stop its consumer
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a tenant
      tags:
      - tenants
    get:
      description: Get a specific tenant by its ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tenant'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a tenant by ID
      tags:
      - tenants
  /tenants/{id}/config/concurrency:
    put:
      consumes:
      - application/json
      description: Update the number of workers for a tenant
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      - description: Concurrency config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/models.UpdateConcurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update tenant concurrency
      tags:
      - tenants
swagger: "2.0"
